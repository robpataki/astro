---
import type { AstroInstance } from 'astro';
import DemoLayout from '@layouts/ThreeJSDemoLayout.astro';
import PageLayout from '@layouts/PageLayout.astro';

import { SITE_TITLE } from '@scripts/const';

const COMPONENT_BASE_PATH = '/src/demos/'; // Can't use variable in string literal with import glob
const demoComponents = await Astro.glob(`/src/demos/**/*.astro`);
console.log('demoComponents: ', demoComponents);

export const prerender = true;

export async function getStaticPaths() {
  const pages = [
    {
      slug: undefined,
      title: 'ThreeJS demos index',
      description: 'Fun ThreeJS experiments',
    },
    {
      slug: 'blob',
      title: 'Blob',
      description: 'A blobby sphere using a vertex shader',
      componentId: `blob/index.astro`,
    },
    {
      slug: 'playground',
      title: 'Playground',
      description: 'A bunch of predefined ThreeJS shapes',
      componentId: `playground/index.astro`,
    },
  ];

  return pages.map(({ slug, title, description, componentId }) => {
    return {
      params: { slug },
      props: { title, description, componentId, pages },
    };
  });
}

const { title, description, componentId, pages } = Astro.props;
const { slug } = Astro.params;

// Find matching component based on component ID
const DemoComponent = demoComponents.find((component: AstroInstance) => {
  const componentDefault = component.default;
  const moduleId = componentDefault.moduleId!!;
  const startIndex = moduleId?.indexOf(COMPONENT_BASE_PATH) + COMPONENT_BASE_PATH.length || 0;
  const endIndex = moduleId?.length;
  const foundMatchingComponent = moduleId?.substring(startIndex, endIndex).indexOf(componentId) === 0;
  console.log(moduleId, componentId, foundMatchingComponent);
  return foundMatchingComponent;
});

console.log('DemoComponent: ', DemoComponent);
---

{
  slug ? (
    <DemoLayout title={`${title} - ${SITE_TITLE}`} description={description}>
      {DemoComponent ? <DemoComponent.default /> : null}
    </DemoLayout>
  ) : (
    <PageLayout title={`${title} - ${SITE_TITLE}`} description={description}>
      <main>
        <div class="demo-list-index">
          <h1>{title}</h1>

          <div class="demo-list-container">
            <h2 id="threejs-demos-heading">Three.js demos</h2>
            <ul aria-labelledby="threejs-demos-heading">
              {pages.map((page: { slug: string; title: string }) => {
                return (
                  <li>
                    <a href={`${page.slug}`}>{page.title}</a>
                  </li>
                );
              })}
            </ul>
          </div>
        </div>
      </main>
    </PageLayout>
  )
}
